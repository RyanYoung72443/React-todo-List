{"version":3,"sources":["components/layout/header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","react_default","a","createElement","style","Link","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","borderBottom","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","console","log","_this2","todos","map","components_TodoItem","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","display","flex","placeholder","className","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","data","get","_this3","BrowserRouter","header","Route","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b469547a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <header style={headerStyle}>\n      <h1>TodoList</h1>\n      <Link style={linkStyle} to='/React-todo-List'>\n        Home\n      </Link>{\" \"}\n      |{\" \"}\n      <Link style={linkStyle} to='/about'>\n        About\n      </Link>\n    </header>\n  );\n}\n\nconst headerStyle = {\n  background: \"#333\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  padding: \"10px\"\n};\n\nconst linkStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\"\n};\n\nexport default Header;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n\nrender() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n            <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} />{' '}\n            { title }\n            <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\n        </p>\n      </div>\n    )\n  }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n}\n\nconst btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 9px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right',\n}\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  markComplete = () =>{\n    console.log('Hello')\n  }\n  \n  render() {\n    return this.props.todos.map((todo) => (\n       <TodoItem key={todo.id} todo={todo} markComplete = {this.props.markComplete} delTodo={this.props.delTodo} />\n    ));\n  }\n}\n\n// PropTypes\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n}\n\nexport default Todos;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class AddTodo extends Component {\n    state ={\n        title: ''\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({ title: '' })\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        return (\n        <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n            <input\n                type=\"text\"\n                name=\"title\"\n                style={{ flex: '10', padding:'5px' }}\n                placeholder=\"Add Todo ...\"\n                value={this.state.title}\n                onChange={this.onChange}\n            />\n            <input \n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn\"\n                style={{ flex: '1' }}\n            />\n        </form>\n        )\n    }\n}\n\nAddTodo.propTypes = {\n    addTodo: PropTypes.func.isRequired\n}\n\nexport default AddTodo\n","import React from 'react'\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <h1>About</h1>\n      <p>This is the TodoList app v1.0.0. It is part of a React crash course</p>\n    </React.Fragment>\n  )\n}\n\n\nexport default About;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/layout/header\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\n//import uuid from 'uuid';\nimport axios from \"axios\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  //toggle complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  //Delete Todo\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n    );\n  };\n\n  //Add Todo\n  addTodo = title => {\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title,\n        completed: false\n      })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <div className='container'>\n            <Header />\n            <Route\n              exact\n              path='/React-todo-List'\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path='/about' component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}